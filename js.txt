javascript:(async function () {
    async function run() {
        const scanningDiv = document.createElement("div");
        Object.assign(scanningDiv.style, {
            position: "fixed",
            bottom: "0",
            left: "0",
            width: "100%",
            maxHeight: "50%",
            overflowY: "auto",
            backgroundColor: "#f8f9fa",
            color: "#212529",
            padding: "10px",
            zIndex: "9999",
            borderTop: "2px solid #000",
            boxShadow: "0 -2px 5px rgba(0,0,0,0.1)",
            fontFamily: "Arial, sans-serif",
            fontSize: "14px"
        });
        scanningDiv.innerHTML = "<h4>Scanning...</h4>";
        document.body.appendChild(scanningDiv);

        const btnClose = document.createElement("button");
        btnClose.innerHTML = "Close";
        btnClose.style.marginRight = "10px";
        btnClose.addEventListener("click", () => scanningDiv.remove());

        const btnCopy = document.createElement("button");
        btnCopy.innerHTML = "Copy All";

        const uniquePaths = new Set();

        async function fetchContent(url) {
            try {
                const response = await fetch(url);
                return response.ok ? await response.text() : null;
            } catch {
                return null;
            }
        }

        function isValidPath(path) {
            return (
                path &&
                !path.includes(" ") &&
                /^[\x20-\x7E]+$/.test(path) &&
                path.length > 1 &&
                path.length < 500
            );
        }

        function extractPaths(content) {
            return [...content.matchAll(/['"]((?:https?:\/\/|\/|\.\.\/|\.\/)[^'"]+)['"]/g)]
                .map((m) => m[1])
                .filter(isValidPath);
        }

        function extractJsonEndpoints(content) {
            try {
                const json = JSON.parse(content);
                const endpoints = [];
                (function traverse(obj) {
                    if (typeof obj === "string" && isValidPath(obj)) {
                        endpoints.push(obj);
                    } else if (obj && typeof obj === "object") {
                        Object.values(obj).forEach(traverse);
                    }
                })(json);
                return endpoints;
            } catch {
                return [];
            }
        }

        async function processURL(url) {
            if (!uniquePaths.has(url)) {
                uniquePaths.add(url);
                const content = await fetchContent(url);
                if (content) {
                    const paths = extractPaths(content).concat(extractJsonEndpoints(content));
                    paths.forEach((p) => uniquePaths.add(p));
                }
            }
        }

        const resources = performance.getEntriesByType("resource").map((e) => e.name);
        for (const res of resources) {
            await processURL(res);
        }

        const domExtractors = [
            () => Array.from(document.querySelectorAll("script[src]")).map((s) => s.src),
            () => Array.from(document.querySelectorAll("link[href]")).map((l) => l.href),
            () => Array.from(document.querySelectorAll("form[action]")).map((f) => f.action),
            () => Array.from(document.querySelectorAll("iframe[src]")).map((i) => i.src),
            () => Array.from(document.querySelectorAll("img[src]")).map((i) => i.src),
            () => Array.from(document.querySelectorAll("object[data], embed[src]")).map(
                (el) => el.data || el.src
            ),
        ];

        domExtractors.forEach((fn) =>
            fn()
                .filter(isValidPath)
                .forEach((p) => uniquePaths.add(p))
        );

        const results = Array.from(uniquePaths);

        btnCopy.addEventListener("click", () => {
            navigator.clipboard.writeText(results.join("\n"));
            alert("Links copied to buffer");
        });

        scanningDiv.innerHTML = `<h4>Unique Paths Found (${results.length}):</h4><div style="max-height:40vh; overflow-y:auto;"><ul>${results
            .map((p) => `<li>${p}</li>`)
            .join("")}</ul></div>`;
        scanningDiv.appendChild(btnClose);
        scanningDiv.appendChild(btnCopy);
    }

    if (document.readyState !== "complete") {
        window.addEventListener("load", run);
    } else {
        run();
    }
})();
